{
  "name": "react-digraph",
  "description": "directed graph react component",
  "version": "5.3.2",
  "keywords": [
    "uber-library",
    "babel",
    "es6",
    "d3",
    "react",
    "graph",
    "digraph"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/uber/react-digraph.git"
  },
  "bugs": {
    "url": "https://github.com/uber/react-digraph/issues/new",
    "email": "antonb@uber.com"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "license": "MIT",
  "main": "dist/main.min.js",
  "peerDependencies": {
    "react": "^16.4.1",
    "react-dom": "^16.4.1"
  },
  "dependencies": {
    "d3": "^5.7.0",
    "dagre": "^0.8.2",
    "kld-affine": "^2.0.4",
    "kld-intersections": "^0.4.3",
    "line-intersect": "^2.1.1",
    "svg-intersections": "^0.4.0"
  },
  "devDependencies": {
    "babel-cli": "^6.6.5",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.2.6",
    "babel-istanbul": "^0.12.2",
    "babel-jest": "^23.4.0",
    "babel-loader": "^7.1.5",
    "babel-plugin-react": "^1.0.0",
    "babel-plugin-transform-es2015-destructuring": "^6.23.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "babel-register": "^6.26.0",
    "brace": "^0.11.1",
    "browserify": "^14.4.0",
    "build-changelog": "^2.1.2",
    "copy-webpack-plugin": "^4.5.2",
    "css-loader": "^1.0.0",
    "d3": "^5.5.0",
    "dagre": "^0.8.2",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "eslint": "^5.2.0",
    "eslint-config-airbnb": "^17.0.0",
    "eslint-loader": "^2.1.0",
    "eslint-plugin-es6-recommended": "^0.1.2",
    "eslint-plugin-flowtype": "^2.50.0",
    "eslint-plugin-import-order": "^2.1.4",
    "eslint-plugin-jsx-a11y": "^6.1.1",
    "eslint-plugin-react": "^7.5.1",
    "jest": "^22.4.3",
    "jsdom": "^11.5.1",
    "live-server": "^1.2.0",
    "node-sass": "^4.9.2",
    "npm-run-all": "^4.1.3",
    "nws": "^1.1.1",
    "opn-cli": "3.1.0",
    "prettier": "^1.12.0",
    "prop-types": "^15.6.0",
    "react": "^16.4.2",
    "react-ace": "^6.1.4",
    "react-dom": "^16.4.2",
    "react-icons": "^3.2.2",
    "react-router-dom": "^4.3.1",
    "regenerator-runtime": "^0.12.0",
    "rimraf": "^2.6.2",
    "sass-loader": "^7.0.3",
    "sinon": "^4.0.1",
    "source-map-loader": "^0.2.3",
    "style-loader": "^0.21.0",
    "tape": "^4.0.0",
    "webpack": "^4.16.2",
    "webpack-cli": "^3.1.0"
  },
  "scripts": {
    "build": "webpack",
    "build:prod": "webpack --config webpack.prod.js",
    "clean": "rimraf ./dist",
    "watch": "webpack --watch",
    "build-css": "node-sass --include-path scss src/styles/main.scss dist/styles/main.css && node-sass --include-path scss src/examples/app.scss dist/examples/app.css",
    "changelog-major": "build-changelog --major",
    "changelog-minor": "build-changelog --minor",
    "changelog-patch": "build-changelog --patch",
    "cover": "npm run test",
    "example": "npm run serve",
    "jenkins-install": "npm install",
    "jenkins-jshint": "npm run lint -- --o=jshint.xml --f=checkstyle",
    "jenkins-test": "npm run jenkins-jshint && npm run test",
    "live-server": "live-server ./dist --entry-file=./index.html",
    "live-serve": "npm-run-all --parallel watch live-server",
    "lint": "eslint src",
    "precommit": "npm run lint -s && npm run test",
    "prefast-test": "npm run prepublish",
    "prepublish": "npm run package",
    "serve": "npm run live-serve",
    "test": "jest",
    "view-cover": "npm run cover -- --report=html && opn ./coverage/index.html",
    "package": "npm-run-all clean lint test build build:prod"
  },
  "jest": {
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "transformIgnorePatterns": [
      "node_modules"
    ],
    "testMatch": [
      "**/__tests__/**/*.+(ts|tsx|js)"
    ],
    "collectCoverage": true,
    "coverageDirectory": "<rootDir>/coverage",
    "collectCoverageFrom": [
      "**/src/**/*.{js,ts,tsx}",
      "!**/node_modules/**",
      "!**/vendor/**",
      "!**/*.d.ts",
      "!**/examples/**"
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "html",
      "cobertura"
    ],
    "setupTestFrameworkScriptFile": "<rootDir>/jest-setup.js",
    "moduleNameMapper": {
      "\\.(scss)$": "<rootDir>/__mocks__/styles.mock.js"
    }
  }
}
